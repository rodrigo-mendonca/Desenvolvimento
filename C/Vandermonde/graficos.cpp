// Class automatically generated by Dev-C++ New Class wizard

#include "graficos.h" // class's header file
#include <graphics.h>
#include <math.h>

// class constructor
Graficos::Graficos()
{
    Graficos::nEscala = 100;
    Graficos::nXTela  = 1000;
    Graficos::nYTela  = 1000;
}

// class destructor
Graficos::~Graficos()
{

}

void Graficos::CriarTela(){
    Graficos::nXCentro = nXTela / 2;
    Graficos::nYCentro = nYTela / 2;
    nRed   = 0;
    nGreen = 0;
    nBlue  = 0;
        
    initwindow( nXTela , nYTela , "Grafico" ); //Cria a tela do grafico
    setbkcolor(WHITE); // Muda a cor do fundo
    cleardevice(); // Limpa a tela  
}

void Graficos::DesenhaPonto(double tnX,double tnY)
{
    int nX = CodeToPixel(tnX,'X');
    int nY = CodeToPixel(tnY,'Y');
    
    setcolor(COLOR(nRed,nGreen,nBlue));
    char cBuffer[30];
    
    sprintf( cBuffer, "(%g,%g)", tnX , tnY);
    
    settextstyle(2,1,4);
    outtextxy( nX + 20, nY - 2, cBuffer );
    putpixel(nX,nY, COLOR(nRed,nGreen,nBlue));	   
}

void Graficos::DesenhaLinha(double tnX1,double tnY1,double tnX2,double tnY2)
{
    int nX1 = CodeToPixel(tnX1,'X');
    int nY1 = CodeToPixel(tnY1,'Y');
    int nX2 = CodeToPixel(tnX2,'X');
    int nY2 = CodeToPixel(tnY2,'Y');
    
    setcolor(COLOR(nRed,nGreen,nBlue));
    line(nX1,nY1,nX2,nY2);	   
}

void Graficos::DesenhaEscala()
{   int nAux  = 0;
    int nLine = 2;
    
    for(int nI = 0;nI <= nXTela; nI++)
    {
            if(nAux == nI)
            {
                setcolor(BLACK);
                line(nI,nYCentro,nI,nYCentro - nLine);
                nAux += nEscala;
            }
            putpixel(nI,nYCentro, COLOR(nRed,nGreen,nBlue));
    }
    
    nAux = 0;
    for(int nI = 0;nI <= nYTela; nI++)
    {
            if(nAux == nI)
            {
                setcolor(BLACK);
                line(nXCentro,nI,nXCentro + nLine,nI);
                nAux += nEscala;
            }
            putpixel(nXCentro,nI, COLOR(nRed,nGreen,nBlue));
    }
}

double Graficos::PixelToCode(int tnPixel, char tcTipo)
{
     int nCentro = 0;
     
     if(tcTipo == 'X'){nCentro = nXCentro;}
     else{nCentro = nYCentro;}
     
     if(tnPixel == nCentro){return(0);}
     
     double nCode = (double) ((tnPixel - nCentro) / nEscala);
     
     if(tcTipo == 'X'){return(nCode);}
     else{return(-nCode);}
}

int Graficos::CodeToPixel(double tnCode, char tcTipo)
{
     int nCode = (int) round(tnCode * nEscala);
     int nCentro = 0;
     
     if(tcTipo == 'X'){nCentro = nXCentro;}
     else{nCentro = nYCentro;}
     
     if(tnCode == 0){return(nCentro);}
     
     if(tcTipo == 'X'){return(nCentro + nCode);}
     else{return(nCentro - nCode);}
}
